#!/usr/bin/env python3
""" a windows-friendly, binder-compatible script to get a development environment
"""

import shutil
import sys
from pathlib import Path
from subprocess import check_call, check_output

from jupyterlab_server.process import which

NPM = which("npm") or which("npm.cmd") or which("npm.bat")
JLPM = which("jlpm")


HERE = Path.cwd()
DIST = HERE / "dist"

DIST.exists() and shutil.rmtree(DIST)


def _(*args, **kwargs):
    if "cwd" in kwargs:
        kwargs["cwd"] = str(kwargs["cwd"])
    str_args = [str(a) for a in args]
    print(f"\n>>>\t{' '.join(str_args)}\n")
    check_call(str_args, **kwargs)


# preflight existing extensions
_("jupyter", "labextension", "list")

# avoid weird caching issues
_(JLPM, "cache", "clean")

# perform all the node stuff
_(JLPM, "bootstrap")

# install local python dev
_(sys.executable, "-m", "pip", "install", "-e", ".", "--no-deps")

# list the extensions
_("jupyter", "labextension", "list")

# disable bundled extensions
_("jupyter", "labextension", "disable", "jupyter-offlinenotebook")

# install our extension
_("jupyter", "labextension", "develop", "--overwrite", ".")

# list the extensions again
_("jupyter", "labextension", "list")

print(">>> OK")
